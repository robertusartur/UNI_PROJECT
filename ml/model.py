from dataclasses import dataclass

def load_staff():
    from catboost import CatBoostRegressor
    import pandas as pd

    
    mean_price_by_region = pd.read_csv('ml/mean_price_by_region.csv').rename(columns={'price':'mean_price_by_region'}).astype(str)
    model = CatBoostRegressor().load_model('ml/model')


    def make_predict(params_house):
        region_name_to_id_dict =  {'Санкт-Петербург': '2661', 'Ленинградская область': '3446', 'Москва': '3', 'Московская область': '81', 'Краснодарский край': '2843', 'Нижегородская область': '2871', 'Ростовская область': '3230', 'Самарская область': '3106', 'Республика Татарстан': '2922', 'Ставропольский край': '2900', 'Республика Башкортостан': '2722', 'Свердловская область': '6171', 'Республика Коми': '4417', 'Челябинская область': '5282', 'Иркутская область': '5368', 'Пермский край': '5520', 'Алтайский край': '6817', 'Республика Бурятия': '9579', 'Ярославская область': '2604', 'Удмуртская Республика': '1010', 'Псковская область': '7793', 'Республика Северная Осетия — Алания': '13919', 'Кемеровская область': '2860', 'Чувашская Республика': '3019', 'Республика Марий Эл': '4982', 'Кабардино-Балкарская Республика': '9648', 'Республика Мордовия': '5241', 'Красноярский край': '3870', 'Тюменская область': '3991', 'Республика Хакасия': '2359', 'Новосибирская область': '9654', 'Воронежская область': '2072', 'Республика Карелия': '8090', 'Республика Дагестан': '4007', 'Республика Саха (Якутия)': '11171', 'Забайкальский край': '10160', 'Республика Крым': '7873, 6937', 'Кировская область': '2594', 'Республика Калмыкия': '8509', 'Республика Адыгея': '11416', 'Карачаево-Черкесская Республика': '11991', 'Республика Тыва': '5178', 'Республика Ингушетия': '13913', 'Республика Алтай': '6309', 'Белгородская область': '5952', 'Архангельская область': '6543', 'Тверская область': '2880', 'Пензенская область': '5993', 'Ханты-Мансийский автономный округ': '2484', 'Липецкая область': '4240', 'Владимирская область': '5789', 'Ямало-Ненецкий автономный округ': '14880', 'Рязанская область': '1491', 'Чеченская Республика': '2885', 'Смоленская область': '5794', 'Саратовская область': '2528', 'Вологодская область': '4374', 'Волгоградская область': '4695', 'Калужская область': '2328', 'Тульская область': '5143', 'Тамбовская область': '2806', 'Мурманская область': '14368', 'Новгородская область': '5736', 'Курская область': '7121', 'Хабаровский край': '4086', 'Брянская область': '821', 'Астраханская область': '10582', 'Калининградская область': '7896', 'Омская область': '8640', 'Курганская область': '5703', 'Томская область': '10201', 'Ульяновская область': '4249', 'Оренбургская область': '3153', 'Костромская область': '4189', 'Орловская область': '2814', 'Камчатский край': '13098', 'Ивановская область': '8894', 'Амурская область': '7929', 'Магаданская область': '16705', 'Еврейская автономная область': '69', 'Приморский край': '4963', 'Сахалинская область': '1901', 'Ненецкий автономный округ': '61888'}
        

        params_house["datetime"] = pd.to_datetime(params_house["datetime"])
        params_house["region"] = region_name_to_id_dict[params_house["region"]]

        params_house = [params_house.values()]

        sample = pd.DataFrame(params_house, 
                columns=['date', 'geo_lat', 'geo_lon', 'building_type', 'level', 'levels',
            'rooms', 'area', 'kitchen_area', 'object_type', 'studio_apartment',
            'region'])
        
        base_date = pd.to_datetime('2018-02-19 00:00:00')
        sample['date'] = sample['date'].apply(lambda x: (x - base_date).days)
        sample['kitchen_to_area_ratio'] = sample['kitchen_area'] / sample['area']
        sample['level_to_levels_ratio'] = sample['level'] / sample['levels']
        sample = pd.merge(sample, mean_price_by_region, on='region')

        return model.predict(sample)[0]

    return make_predict

